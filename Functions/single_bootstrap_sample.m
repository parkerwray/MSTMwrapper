function [output] = single_bootstrap_sample(N_tot, N_sample, A, Ax, B, Bx, ...
    Ipar, Iper, qa, qe, qsi, qsd, radii, wopt, ff, func)
% Note: This assumes that there is no dimension for fill fraction in A (as
% was done in the filters done in October, 2020
% We also here use take both s and p polarization together

indices = randsample(N_tot, N_sample);
doubled_indices = cat(1, indices, indices+50);

output = func(...
    A   (:,doubled_indices,:,:,:), ...
    Ax  (:,doubled_indices,:,:,:), ...
    B   (:,doubled_indices,:,:,:), ...
    Bx  (:,doubled_indices,:,:,:), ...
    Ipar(:,:,indices,:,:), ...
    Iper(:,:,indices,:,:), ...
    qa  (:,:,indices,:  ), ...
    qe  (:,:,indices,:  ), ...
    qsi (:,:,indices,:  ), ...
    qsd (:,:,indices,:  ), ...
    radii, ...
    wopt , ...
    ff);
    

end